# coding: utf-8

"""
    Argo Workflows API

    Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/  # noqa: E501

    The version of the OpenAPI document: VERSION
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401
import functools  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from argo_workflows.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    UUIDSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    Configuration,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    Int32Base,
    Int64Base,
    Float32Base,
    Float64Base,
    NumberBase,
    UUIDBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class IoArgoprojEventsV1alpha1ArtifactLocation(
    DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    @classmethod
    @property
    def configmap(cls) -> typing.Type['ConfigMapKeySelector']:
        return ConfigMapKeySelector

    @classmethod
    @property
    def file(cls) -> typing.Type['IoArgoprojEventsV1alpha1FileArtifact']:
        return IoArgoprojEventsV1alpha1FileArtifact

    @classmethod
    @property
    def git(cls) -> typing.Type['IoArgoprojEventsV1alpha1GitArtifact']:
        return IoArgoprojEventsV1alpha1GitArtifact
    inline = StrSchema

    @classmethod
    @property
    def resource(cls) -> typing.Type['IoArgoprojEventsV1alpha1Resource']:
        return IoArgoprojEventsV1alpha1Resource

    @classmethod
    @property
    def s3(cls) -> typing.Type['IoArgoprojEventsV1alpha1S3Artifact']:
        return IoArgoprojEventsV1alpha1S3Artifact

    @classmethod
    @property
    def url(cls) -> typing.Type['IoArgoprojEventsV1alpha1URLArtifact']:
        return IoArgoprojEventsV1alpha1URLArtifact


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        configmap: typing.Union['ConfigMapKeySelector', Unset] = unset,
        file: typing.Union['IoArgoprojEventsV1alpha1FileArtifact', Unset] = unset,
        git: typing.Union['IoArgoprojEventsV1alpha1GitArtifact', Unset] = unset,
        inline: typing.Union[inline, Unset] = unset,
        resource: typing.Union['IoArgoprojEventsV1alpha1Resource', Unset] = unset,
        s3: typing.Union['IoArgoprojEventsV1alpha1S3Artifact', Unset] = unset,
        url: typing.Union['IoArgoprojEventsV1alpha1URLArtifact', Unset] = unset,
        _configuration: typing.Optional[Configuration] = None,
        **kwargs: typing.Type[Schema],
    ) -> 'IoArgoprojEventsV1alpha1ArtifactLocation':
        return super().__new__(
            cls,
            *args,
            configmap=configmap,
            file=file,
            git=git,
            inline=inline,
            resource=resource,
            s3=s3,
            url=url,
            _configuration=_configuration,
            **kwargs,
        )

from argo_workflows.model.config_map_key_selector import ConfigMapKeySelector
from argo_workflows.model.io_argoproj_events_v1alpha1_file_artifact import IoArgoprojEventsV1alpha1FileArtifact
from argo_workflows.model.io_argoproj_events_v1alpha1_git_artifact import IoArgoprojEventsV1alpha1GitArtifact
from argo_workflows.model.io_argoproj_events_v1alpha1_resource import IoArgoprojEventsV1alpha1Resource
from argo_workflows.model.io_argoproj_events_v1alpha1_s3_artifact import IoArgoprojEventsV1alpha1S3Artifact
from argo_workflows.model.io_argoproj_events_v1alpha1_url_artifact import IoArgoprojEventsV1alpha1URLArtifact
